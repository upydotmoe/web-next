import{B as h,i as S,j as d,R as m,k as p}from"./entry.013e3180.js";const f=function(n){return{getSetting:async(a,r={})=>{if(a==null)throw new m("key","Required parameter key was null or undefined when calling getSetting.");const s="/settings",t=new URL(s,"https://example.com");let e;n&&(e=n.baseOptions);const o={method:"GET",...e,...r},u={},c={};a!==void 0&&(c.key=a);const l=new URLSearchParams(t.search);for(const i in c)l.set(i,c[i]);for(const i in r.params)l.set(i,r.params[i]);t.search=new URLSearchParams(l).toString();let g=e&&e.headers?e.headers:{};return o.headers={...u,...g,...r.headers},{url:t.pathname+t.search+t.hash,options:o}}}},A=function(n){return{async getSetting(a,r){const s=await f(n).getSetting(a,r);return(t=S,e=d)=>{const o={...s.options,url:e+s.url};return t.request(o)}}}};class w extends h{async getSetting(a,r){return A(this.configuration).getSetting(a,r).then(s=>s(this.axios,this.basePath))}}function P(n,a){return{getSetting:async s=>{var t;try{const{data:e}=await new w(n).getSetting(s);return[(t=e.data)==null?void 0:t.value,null]}catch(e){return[null,p().consumeReadableStreamError(e)]}}}}export{P as u};
